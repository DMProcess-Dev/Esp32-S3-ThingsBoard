{
  "fqn": "1",
  "name": "1",
  "deprecated": false,
  "image": null,
  "description": null,
  "descriptor": {
    "type": "timeseries",
    "sizeX": 8,
    "sizeY": 5,
    "resources": [],
    "templateHtml": "<div class=\"esp32-status-card\">\n  <div class=\"status-header\">\n    <div class=\"device-info\">\n      <h3 class=\"device-title\">ESP32-S3 System Status</h3>\n      <div class=\"status-indicator\"></div>\n    </div>\n    <div class=\"timestamp\"></div>\n  </div>\n  <div class=\"status-grid\">\n    <div class=\"metric-card primary-metric\">\n      <div class=\"metric-header\">\n        <span class=\"metric-icon\">üå°Ô∏è</span>\n        <span class=\"metric-title\">Temperature</span>\n      </div>\n      <div class=\"temperature-gauge\">\n        <div class=\"gauge-container\">\n          <svg class=\"gauge-svg\" viewBox=\"0 0 200 120\">\n            <path class=\"gauge-background\" d=\"M 30 90 A 70 70 0 0 1 170 90\" stroke=\"#e0e0e0\" stroke-width=\"8\" fill=\"none\"/>\n            <path class=\"gauge-active\" d=\"M 30 90 A 70 70 0 0 1 170 90\" stroke=\"#4CAF50\" stroke-width=\"8\" fill=\"none\"/>\n            <line class=\"gauge-needle\" x1=\"100\" y1=\"90\" x2=\"100\" y2=\"30\" stroke=\"#333\" stroke-width=\"2\"/>\n            <circle cx=\"100\" cy=\"90\" r=\"5\" fill=\"#333\"/>\n          </svg>\n        </div>\n        <div class=\"temperature-value\">\n          <span class=\"value\">--</span>\n          <span class=\"unit\">¬∞C</span>\n        </div>\n        <div class=\"temperature-status\">Normal</div>\n      </div>\n    </div>\n    <div class=\"metric-card\">\n      <div class=\"metric-header\">\n        <span class=\"metric-icon\">üì∂</span>\n        <span class=\"metric-title\">Wi-Fi Signal</span>\n      </div>\n      <div class=\"rssi-display\">\n        <div class=\"signal-bars\">\n          <div class=\"signal-bar\"></div>\n          <div class=\"signal-bar\"></div>\n          <div class=\"signal-bar\"></div>\n          <div class=\"signal-bar\"></div>\n          <div class=\"signal-bar\"></div>\n        </div>\n        <div class=\"rssi-value\">\n          <span class=\"value\">--</span>\n          <span class=\"unit\">dBm</span>\n        </div>\n        <div class=\"rssi-quality\">Unknown</div>\n      </div>\n    </div>\n    <div class=\"metric-card\">\n      <div class=\"metric-header\">\n        <span class=\"metric-icon\">üíæ</span>\n        <span class=\"metric-title\">Free Memory</span>\n      </div>\n      <div class=\"memory-display\">\n        <div class=\"memory-progress\">\n          <div class=\"progress-track\">\n            <div class=\"progress-fill\"></div>\n          </div>\n        </div>\n        <div class=\"memory-value\">\n          <span class=\"value\">--</span>\n          <span class=\"unit\">KB</span>\n        </div>\n        <div class=\"memory-status\">Available</div>\n      </div>\n    </div>\n    <div class=\"metric-card\">\n      <div class=\"metric-header\">\n        <span class=\"metric-icon\">‚è±Ô∏è</span>\n        <span class=\"metric-title\">Uptime</span>\n      </div>\n      <div class=\"uptime-display\">\n        <div class=\"uptime-segments\">\n          <div class=\"time-segment\">\n            <span class=\"time-value\">0</span>\n            <span class=\"time-label\">Days</span>\n          </div>\n          <div class=\"time-segment\">\n            <span class=\"time-value\">0</span>\n            <span class=\"time-label\">Hours</span>\n          </div>\n          <div class=\"time-segment\">\n            <span class=\"time-value\">0</span>\n            <span class=\"time-label\">Mins</span>\n          </div>\n        </div>\n        <div class=\"uptime-stability\">Starting</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"status-footer\">\n    <div class=\"connection-status\">\n      <span class=\"connection-dot\"></span>\n      <span class=\"connection-text\">Connected</span>\n    </div>\n    <div class=\"data-rate\">Updates: 5s</div>\n  </div>\n</div>",
    "templateCss": "/* DEFAULT THEME - Purple/Blue Gradient */\n.theme-default {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n/* DARK THEME - Dark with blue accents */\n.theme-dark {\n    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\n}\n\n/* GREEN THEME - Nature inspired */\n.theme-green {\n    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);\n}\n\n/* ORANGE THEME - Warm sunset */\n.theme-orange {\n    background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);\n}\n\n/* RED THEME - Alert/Critical */\n.theme-red {\n    background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);\n}\n\n/* BLUE THEME - Ocean blue */\n.theme-blue {\n    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n}\n\n/* PURPLE THEME - Deep purple */\n.theme-purple {\n    background: linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%);\n}\n\n/* CYBERPUNK THEME - Neon green/pink */\n.theme-cyberpunk {\n    background: linear-gradient(135deg, #ff00cc 0%, #333399 100%);\n}\n\n/* MAIN CSS - Updated with theme system */\n.esp32-status-card {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    /* Default */\n    border-radius: 16px;\n    padding: 20px;\n    color: white;\n    height: 100%;\n    box-sizing: border-box;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n    position: relative;\n    overflow: hidden;\n}\n\n/* Apply theme classes */\n.esp32-status-card.theme-dark {\n    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\n}\n\n.esp32-status-card.theme-green {\n    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);\n}\n\n.esp32-status-card.theme-orange {\n    background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);\n}\n\n.esp32-status-card.theme-red {\n    background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);\n}\n\n.esp32-status-card.theme-blue {\n    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n}\n\n.esp32-status-card.theme-purple {\n    background: linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%);\n}\n\n.esp32-status-card.theme-cyberpunk {\n    background: linear-gradient(135deg, #ff00cc 0%, #333399 100%);\n}\n\n.esp32-status-card::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    border-radius: 16px;\n    z-index: 0;\n}\n\n.esp32-status-card>* {\n    position: relative;\n    z-index: 1;\n}\n\n.status-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding-bottom: 15px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.device-info {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n}\n\n.device-title {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n.status-indicator {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: #4CAF50;\n    box-shadow: 0 0 10px rgba(76, 175, 80, 0.6);\n    animation: pulse 2s infinite;\n}\n\n/* Offline status indicator */\n.status-indicator.offline {\n    background: #F44336;\n    box-shadow: 0 0 10px rgba(244, 67, 54, 0.6);\n    animation: none;\n}\n\n@keyframes pulse {\n\n    0%,\n    100% {\n        opacity: 1;\n    }\n\n    50% {\n        opacity: 0.5;\n    }\n}\n\n.timestamp {\n    font-size: 12px;\n    opacity: 0.8;\n}\n\n.status-grid {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    gap: 15px;\n    height: calc(100% - 120px);\n}\n\n.metric-card {\n    background: rgba(255, 255, 255, 0.15);\n    border-radius: 12px;\n    padding: 15px;\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    transition: all 0.3s ease;\n}\n\n.metric-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n}\n\n.metric-card.offline {\n    opacity: 0.6;\n    border: 1px solid rgba(244, 67, 54, 0.3);\n}\n\n.primary-metric {\n    grid-row: 1 / 3;\n}\n\n.metric-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 10px;\n}\n\n.metric-icon {\n    font-size: 16px;\n}\n\n.metric-title {\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0.9;\n}\n\n.temperature-gauge {\n    text-align: center;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.gauge-container {\n    width: 120px;\n    height: 80px;\n    margin: 0 auto 15px;\n}\n\n.gauge-svg {\n    width: 100%;\n    height: 100%;\n}\n\n.gauge-active {\n    transition: stroke-dasharray 0.5s ease;\n}\n\n.gauge-needle {\n    transition: transform 0.5s ease;\n    transform-origin: 100px 90px;\n}\n\n.temperature-value {\n    margin-bottom: 8px;\n}\n\n.temperature-value .value {\n    font-size: 24px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n.temperature-value .unit {\n    font-size: 16px;\n    opacity: 0.8;\n    margin-left: 4px;\n}\n\n.temperature-status {\n    font-size: 12px;\n    opacity: 0.8;\n    font-weight: 500;\n}\n\n.rssi-display {\n    text-align: center;\n}\n\n.signal-bars {\n    display: flex;\n    justify-content: center;\n    gap: 3px;\n    margin-bottom: 10px;\n}\n\n.signal-bar {\n    width: 8px;\n    background: rgba(255, 255, 255, 0.3);\n    border-radius: 4px 4px 0 0;\n    transition: all 0.3s ease;\n}\n\n.signal-bar:nth-child(1) {\n    height: 8px;\n}\n\n.signal-bar:nth-child(2) {\n    height: 12px;\n}\n\n.signal-bar:nth-child(3) {\n    height: 16px;\n}\n\n.signal-bar:nth-child(4) {\n    height: 20px;\n}\n\n.signal-bar:nth-child(5) {\n    height: 24px;\n}\n\n.signal-bar.active {\n    background: #4CAF50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);\n}\n\n.rssi-value .value {\n    font-size: 18px;\n    font-weight: 600;\n}\n\n.rssi-value .unit {\n    font-size: 12px;\n    opacity: 0.8;\n}\n\n.rssi-quality {\n    font-size: 11px;\n    opacity: 0.8;\n    margin-top: 4px;\n}\n\n.memory-display {\n    text-align: center;\n}\n\n.memory-progress {\n    margin-bottom: 12px;\n}\n\n.progress-track {\n    width: 100%;\n    height: 8px;\n    background: rgba(255, 255, 255, 0.3);\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.progress-fill {\n    height: 100%;\n    background: linear-gradient(90deg, #4CAF50, #2196F3);\n    border-radius: 4px;\n    transition: width 0.5s ease;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.3);\n    width: 0%;\n}\n\n.memory-value .value {\n    font-size: 16px;\n    font-weight: 600;\n}\n\n.memory-value .unit {\n    font-size: 12px;\n    opacity: 0.8;\n}\n\n.memory-status {\n    font-size: 11px;\n    opacity: 0.8;\n    margin-top: 4px;\n}\n\n.uptime-display {\n    text-align: center;\n}\n\n.uptime-segments {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n}\n\n.time-segment {\n    flex: 1;\n    text-align: center;\n}\n\n.time-value {\n    display: block;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 1;\n}\n\n.time-label {\n    display: block;\n    font-size: 10px;\n    opacity: 0.8;\n    margin-top: 2px;\n}\n\n.uptime-stability {\n    font-size: 11px;\n    opacity: 0.8;\n}\n\n.status-footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 15px;\n    padding-top: 15px;\n    border-top: 1px solid rgba(255, 255, 255, 0.2);\n    font-size: 12px;\n}\n\n.connection-status {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n}\n\n.connection-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #4CAF50;\n    box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);\n}\n\n.connection-dot.offline {\n    background: #F44336;\n    box-shadow: 0 0 8px rgba(244, 67, 54, 0.5);\n}\n\n.data-rate {\n    opacity: 0.8;\n}\n\n@media (max-width: 768px) {\n    .status-grid {\n        grid-template-columns: 1fr;\n        grid-template-rows: auto;\n    }\n\n    .primary-metric {\n        grid-row: auto;\n    }\n\n    .device-title {\n        font-size: 16px;\n    }\n\n    .gauge-container {\n        width: 100px;\n        height: 70px;\n    }\n\n    .temperature-value .value {\n        font-size: 20px;\n    }\n}\n\n.status-normal {\n    color: #4CAF50;\n}\n\n.status-warning {\n    color: #FF9800;\n}\n\n.status-critical {\n    color: #F44336;\n}",
    "controllerScript": "self.onInit = function() {\n    self.ctx.data = {\n        temperature: 0,\n        rssi: 0,\n        heap: 0,\n        uptime: 0\n    };\n\n    self.ctx.lastDataUpdate = null;\n    self.ctx.isOnline = false;\n\n    // Apply theme if specified in settings\n    var theme = self.ctx.settings.colorTheme ||\n        'default';\n    self.applyTheme(theme);\n\n    self.updateDisplay();\n\n    // Start offline detection timer\n    self.ctx.offlineTimer = setInterval(function() {\n        self.checkDeviceStatus();\n    }, 10000); // Check every 10 seconds\n};\n\nself.onDataUpdated = function() {\n    var data = self.ctx.defaultSubscription.data;\n    var hasValidData = false;\n\n    if (data && data.length > 0) {\n        for (var i = 0; i < data.length; i++) {\n            var dataKey = data[i].dataKey;\n            if (dataKey && data[i].data.length > 0) {\n                var value = data[i].data[data[i].data\n                    .length - 1][1];\n                hasValidData = true;\n\n                switch (dataKey.name) {\n                    case 'temperature':\n                        self.ctx.data.temperature =\n                            parseFloat(value);\n                        break;\n                    case 'rssi':\n                        self.ctx.data.rssi = parseInt(\n                            value);\n                        break;\n                    case 'heap':\n                        self.ctx.data.heap = parseInt(\n                            value);\n                        break;\n                    case 'uptime':\n                        self.ctx.data.uptime = parseInt(\n                            value);\n                        break;\n                }\n            }\n        }\n\n        if (hasValidData) {\n            self.ctx.lastDataUpdate = Date.now();\n            self.ctx.isOnline = true;\n        }\n\n        self.updateDisplay();\n        self.updateConnectionStatus();\n\n        var now = new Date();\n        self.ctx.$container.find('.timestamp').text(\n            'Last: ' + now.toLocaleTimeString());\n    }\n};\n\nself.checkDeviceStatus = function() {\n    var currentTime = Date.now();\n    var timeSinceLastUpdate = self.ctx.lastDataUpdate ?\n        (currentTime - self.ctx.lastDataUpdate) / 1000 :\n        Infinity;\n\n    // Consider device offline if no data for more than 60 seconds\n    var offlineThreshold = self.ctx.settings\n        .offlineThreshold || 60;\n\n    // Also check if all values are zero (might indicate device issues)\n    var allZero = (self.ctx.data.temperature === 0 &&\n        self.ctx.data.rssi === 0 &&\n        self.ctx.data.heap === 0 &&\n        self.ctx.data.uptime === 0);\n\n    var wasOnline = self.ctx.isOnline;\n    self.ctx.isOnline = (timeSinceLastUpdate <\n            offlineThreshold) && !allZero && self.ctx\n        .lastDataUpdate !== null;\n\n    // Update UI if status changed\n    if (wasOnline !== self.ctx.isOnline) {\n        self.updateConnectionStatus();\n    }\n};\n\nself.updateConnectionStatus = function() {\n    var $container = self.ctx.$container;\n    var $statusIndicator = $container.find(\n        '.status-indicator');\n    var $connectionDot = $container.find(\n        '.connection-dot');\n    var $connectionText = $container.find(\n        '.connection-text');\n    var $metricCards = $container.find('.metric-card');\n\n    if (self.ctx.isOnline) {\n        // Online status\n        $statusIndicator.removeClass('offline');\n        $connectionDot.removeClass('offline');\n        $connectionText.text('Connected');\n        $metricCards.removeClass('offline');\n    } else {\n        // Offline status\n        $statusIndicator.addClass('offline');\n        $connectionDot.addClass('offline');\n        $connectionText.text('Offline');\n        $metricCards.addClass('offline');\n    }\n};\n\nself.applyTheme = function(theme) {\n    var $card = self.ctx.$container.find(\n        '.esp32-status-card');\n\n    // Remove existing theme classes\n    $card.removeClass(\n        'theme-default theme-dark theme-green theme-orange theme-red theme-blue theme-purple theme-cyberpunk'\n        );\n\n    // Apply new theme\n    if (theme && theme !== 'default') {\n        $card.addClass('theme-' + theme);\n    }\n};\n\nself.updateDisplay = function() {\n    var temp = self.ctx.data.temperature;\n    var rssi = self.ctx.data.rssi;\n    var heap = self.ctx.data.heap;\n    var uptime = self.ctx.data.uptime;\n\n    // Update Temperature\n    self.ctx.$container.find(\n        '.temperature-value .value').text(temp\n        .toFixed(1));\n\n    var percentage = Math.min(Math.max(temp / 60, 0),\n    1);\n    var angle = -90 + (percentage * 180);\n    self.ctx.$container.find('.gauge-needle').attr(\n        'transform', 'rotate(' + angle + ' 100 90)');\n\n    var circumference = Math.PI * 70;\n    var progress = percentage * circumference;\n    self.ctx.$container.find('.gauge-active').attr(\n        'stroke-dasharray', progress + ',' +\n        circumference);\n\n    var statusText, color;\n    if (temp < 30) {\n        statusText = 'Normal';\n        color = '#4CAF50';\n    } else if (temp < 45) {\n        statusText = 'Warm';\n        color = '#FF9800';\n    } else {\n        statusText = 'Hot';\n        color = '#F44336';\n    }\n\n    self.ctx.$container.find('.temperature-status')\n        .text(statusText);\n    self.ctx.$container.find('.gauge-active').attr(\n        'stroke', color);\n\n    // Update RSSI\n    self.ctx.$container.find('.rssi-value .value').text(\n        rssi);\n\n    var bars = 0;\n    var quality = 'Poor';\n\n    if (rssi >= -30) {\n        bars = 5;\n        quality = 'Excellent';\n    } else if (rssi >= -50) {\n        bars = 4;\n        quality = 'Very Good';\n    } else if (rssi >= -60) {\n        bars = 3;\n        quality = 'Good';\n    } else if (rssi >= -70) {\n        bars = 2;\n        quality = 'Fair';\n    } else if (rssi >= -80) {\n        bars = 1;\n        quality = 'Poor';\n    } else if (rssi === 0) {\n        bars = 0;\n        quality = 'No Signal';\n    }\n\n    self.ctx.$container.find('.signal-bar').each(\n        function(index) {\n            if (index < bars) {\n                $(this).addClass('active');\n            } else {\n                $(this).removeClass('active');\n            }\n        });\n\n    self.ctx.$container.find('.rssi-quality').text(\n        quality);\n\n    // Update Memory\n    var heapKB = Math.round(heap / 1024);\n    self.ctx.$container.find('.memory-value .value')\n        .text(heapKB.toLocaleString());\n\n    var totalMemoryKB = 320;\n    var memoryPercentage = Math.min((heapKB /\n        totalMemoryKB) * 100, 100);\n\n    self.ctx.$container.find('.progress-fill').css(\n        'width', memoryPercentage + '%');\n\n    var memStatus;\n    if (heapKB === 0) {\n        memStatus = 'No Data';\n    } else if (memoryPercentage > 70) {\n        memStatus = 'Excellent';\n    } else if (memoryPercentage > 40) {\n        memStatus = 'Good';\n    } else {\n        memStatus = 'Low';\n    }\n\n    self.ctx.$container.find('.memory-status').text(\n        memStatus);\n\n    // Update Uptime\n    var days = Math.floor(uptime / 86400);\n    var hours = Math.floor((uptime % 86400) / 3600);\n    var minutes = Math.floor((uptime % 3600) / 60);\n\n    var timeSegments = self.ctx.$container.find(\n        '.time-segment');\n    $(timeSegments[0]).find('.time-value').text(days);\n    $(timeSegments[1]).find('.time-value').text(hours);\n    $(timeSegments[2]).find('.time-value').text(\n    minutes);\n\n    var stability;\n    if (uptime === 0) {\n        stability = 'No Data';\n    } else if (uptime < 300) {\n        stability = 'Starting';\n    } else if (uptime < 3600) {\n        stability = 'Warming Up';\n    } else if (uptime < 86400) {\n        stability = 'Stable';\n    } else {\n        stability = 'Rock Solid';\n    }\n\n    self.ctx.$container.find('.uptime-stability').text(\n        stability);\n};\n\nself.onDestroy = function() {\n    // Clear offline detection timer\n    if (self.ctx.offlineTimer) {\n        clearInterval(self.ctx.offlineTimer);\n    }\n};",
    "settingsForm": [],
    "dataKeySettingsForm": [],
    "latestDataKeySettingsForm": [],
    "settingsDirective": "tb-time-series-chart-widget-settings",
    "dataKeySettingsDirective": "tb-time-series-chart-key-settings",
    "latestDataKeySettingsDirective": "",
    "hasBasicMode": true,
    "basicModeDirective": "tb-time-series-chart-basic-config",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#FFC107\",\"settings\":{\"type\":\"bar\"},\"_hash\":0.5534217244004682,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null}],\"alarmFilterConfig\":{\"statusList\":[\"ACTIVE\"]},\"latestDataKeys\":null}],\"timewindow\":{\"hideInterval\":false,\"hideLastInterval\":false,\"hideQuickInterval\":false,\"hideAggregation\":false,\"hideAggInterval\":false,\"hideTimezone\":false,\"selectedTab\":0,\"realtime\":{\"realtimeType\":0,\"timewindowMs\":60000,\"quickInterval\":\"CURRENT_DAY\",\"interval\":1000},\"aggregation\":{\"type\":\"AVG\",\"limit\":25000},\"timezone\":null},\"showTitle\":true,\"backgroundColor\":\"rgba(0, 0, 0, 0)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"top\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"thresholds\":[],\"dataZoom\":true,\"stack\":false,\"yAxis\":{\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"left\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\"},\"xAxis\":{\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"bottom\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":10,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"ticksFormat\":{},\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\"},\"legendLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"16px\"},\"legendLabelColor\":\"rgba(0, 0, 0, 0.76)\",\"showTooltip\":true,\"tooltipTrigger\":\"axis\",\"tooltipValueFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"500\",\"lineHeight\":\"16px\"},\"tooltipValueColor\":\"rgba(0, 0, 0, 0.76)\",\"tooltipShowDate\":true,\"tooltipDateFormat\":{\"format\":null,\"lastUpdateAgo\":false,\"custom\":false,\"auto\":true,\"autoDateFormatSettings\":{}},\"tooltipDateFont\":{\"family\":\"Roboto\",\"size\":11,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"16px\"},\"tooltipDateColor\":\"rgba(0, 0, 0, 0.76)\",\"tooltipDateInterval\":true,\"tooltipBackgroundColor\":\"rgba(255, 255, 255, 0.76)\",\"tooltipBackgroundBlur\":4,\"background\":{\"type\":\"color\",\"color\":\"#fff\",\"overlay\":{\"enabled\":false,\"color\":\"rgba(255,255,255,0.72)\",\"blur\":3}},\"yAxes\":{\"default\":{\"units\":null,\"decimals\":0,\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"left\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"ticksFormatter\":null,\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\",\"id\":\"default\",\"order\":0}},\"noAggregationBarWidthSettings\":{\"strategy\":\"group\",\"groupWidth\":{\"relative\":true,\"relativeWidth\":2,\"absoluteWidth\":1000},\"barWidth\":{\"relative\":true,\"relativeWidth\":2,\"absoluteWidth\":1000}},\"animation\":{\"animation\":true,\"animationThreshold\":2000,\"animationDuration\":500,\"animationEasing\":\"cubicOut\",\"animationDelay\":0,\"animationDurationUpdate\":300,\"animationEasingUpdate\":\"cubicOut\",\"animationDelayUpdate\":0},\"padding\":\"12px\"},\"title\":\"1\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":null,\"mobileHeight\":null,\"configMode\":\"basic\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\",\"useDashboardTimewindow\":false,\"displayTimewindow\":true,\"titleFont\":{\"size\":16,\"sizeUnit\":\"px\",\"family\":\"Roboto\",\"weight\":\"500\",\"style\":\"normal\",\"lineHeight\":\"24px\"},\"titleColor\":\"rgba(0, 0, 0, 0.87)\",\"titleTooltip\":\"\",\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"units\":\"\",\"decimals\":null,\"noDataDisplayMessage\":\"\",\"timewindowStyle\":{\"showIcon\":false,\"iconSize\":\"24px\",\"icon\":null,\"iconPosition\":\"left\",\"font\":{\"size\":12,\"sizeUnit\":\"px\",\"family\":\"Roboto\",\"weight\":\"400\",\"style\":\"normal\",\"lineHeight\":\"16px\"},\"color\":\"rgba(0, 0, 0, 0.38)\",\"displayTypePrefix\":true},\"margin\":\"0px\",\"borderRadius\":\"0px\",\"iconSize\":\"0px\"}"
  },
  "resources": null,
  "scada": false,
  "tags": null
}